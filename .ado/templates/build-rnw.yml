# Steps template for building any React Native Windows variant.

parameters:
  useRnFork: true
  debug: false

  # NuGet & MSBuild
  project:
  msbuildVersion: $(MSBuildVersion)
  msBuildArchitecture: $(MSBuildArchitecture)
  preferredToolArchitecture: $(MSBuildPreferredToolArchitecture)
  platformToolset: $(MSBuildPlatformToolset)
  msbuildArguments: ''
  yarnBuildCmd: build

  # Visual Studio Installer
  vsInstallerUri: $(VsInstallerUri)
  vsComponents: ''

steps:
  - template: prepare-env.yml
    parameters:
      useRnFork: ${{ parameters.useRnFork }}
      vsInstallerUri: ${{ parameters.vsInstallerUri }}
      vsComponents: ${{ parameters.vsComponents }}
      yarnBuildCmd: ${{ parameters.yarnBuildCmd }}
      debug: ${{ parameters.debug }}

  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      command: restore
      restoreSolution: ${{parameters.project }}
      feedsToUse: config
      nugetConfigPath: $(Build.SourcesDirectory)/vnext/NuGet.config
      restoreDirectory: packages/
      verbosityRestore: Detailed # Options: quiet, normal, detailed

  - task: MSBuild@1
    displayName: MSBuild ${{parameters.project}}
    inputs:
      solution: ${{parameters.project }}
      msbuildVersion: ${{parameters.msbuildVersion}}
      msbuildArchitecture: ${{parameters.msBuildArchitecture}}
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
      createLogFile: true
      logFileVerbosity: detailed
      msbuildArguments:
        /p:PreferredToolArchitecture=${{parameters.preferredToolArchitecture}}
        /p:PlatformToolset=${{parameters.platformToolset}}
        ${{parameters.msbuildArguments}}
        /p:BaseIntDir=$(BaseIntDir)

  - task: PublishBuildArtifacts@1
    condition:  succeededOrFailed()
    timeoutInMinutes: 10
    inputs:
      pathtoPublish: $(Build.SourcesDirectory)/${{parameters.project}}.log
      artifactName: Detailed Logs for ${{parameters.project}} $(BuildConfiguration) $(BuildPlatform)
      publishLocation: 'Container'
