#
parameters:
  name: ''
  pool: ''
  BuildPlatform: 'x86' # ARM, x86, x64
  UseRNFork: true

jobs:
  - job: ${{ parameters.name }}
    displayName: E2E Test
    pool: ${{ parameters.pool }}
    timeoutInMinutes: 60 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
    steps:
      - checkout: self # self represents the repo where the initial Pipelines YAML file was found
        clean: true # whether to fetch clean each time
        # fetchDepth: 2 # the depth of commits to ask Git to fetch
        lfs: false # whether to download Git-LFS files
        submodules: false # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
        persistCredentials: false # set to 'true' to leave the OAuth token in the Git config after the initial fetch

      - task: CmdLine@2
        displayName: Install react-native-cli
        inputs:
          script: npm install -g react-native-cli

      - task: CmdLine@2
        displayName: Modify package.json to use unforked RN
        inputs:
          script: node scripts/useUnForkedRN.js
          workingDirectory: vnext
        condition: and(succeeded(), eq('${{ parameters.UseRNFork }}', 'false'))

      - task: CmdLine@2
        displayName: yarn install (Using microsoft/react-native)
        inputs:
          script: yarn install --frozen-lockfile
        condition: and(succeeded(), eq('${{ parameters.UseRNFork }}', 'true'))

        # We can't use a frozen lockfile for both the fork and non-fork, since they install different dependencies
        # We don't want to force devs to update/create two lock files on every change, so just don't freeze when
        # using the non fork version.
      - task: CmdLine@2
        displayName: yarn install (Using facebook/react-native)
        inputs:
          script: yarn install
        condition: and(succeeded(), eq('${{ parameters.UseRNFork }}', 'false'))

      - template: stop-packagers.yml

      - task: CmdLine@2
        displayName: yarn build
        inputs:
          script: yarn build

      - template: install-SDK.yml

      - task: NuGetCommand@2
        displayName: NuGet restore - ReactUWPTestApp
        inputs:
          command: restore
          restoreSolution: packages/E2ETest/windows/ReactUWPTestApp.sln
          verbosityRestore: Detailed # Options: quiet, normal, detailed

      - task: CmdLine@2
        displayName: Create bundle
        inputs:
          script: yarn run bundle
          workingDirectory: packages/E2ETest

      - task: CmdLine@2
        displayName: run-windows
        inputs:
          script:  react-native run-windows --no-launch --no-packager --arch ${{ parameters.BuildPlatform }} --release --bundle --logging --force
          workingDirectory: packages/E2ETest

      - task: CmdLine@2
        displayName: run test
        inputs:
          script: yarn run test
          workingDirectory: packages/E2ETest
          
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'packages/E2ETest/reports/*.log'
